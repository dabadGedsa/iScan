<?xml version="1.0"?>
<doc>
<assembly>
<name>
LibreriaCadenaProduccion
</name>
</assembly>
<members>
<member name="T:LibreriaCadenaProduccion.My.Resources.Resources">
<summary>
  Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.ResourceManager">
<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.Culture">
<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.bullet_green">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.bullet_red">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.cmbenter">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.cmdBajar">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.cmdMouseEnter">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.cmdMouseLeave">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.cmdSubir">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.cmdWebTab">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.progressbar">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.progressbar4">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.SGG_ProgessBar_2">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.tituloPaneles">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:LibreriaCadenaProduccion.My.Resources.Resources.zoom">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="M:LibreriaCadenaProduccion.Configuracion.clsConfiguracion.#ctor(System.String)">
 <summary>
 Constructor. Carga en memoria el archivo de configuración pasado como parámetro.
 </summary>
 <param name="rutaXML">
 Ruta completa del archivo XML de configuración. El archivo de configuración correcto es el que tiene 
 el formato "nombre de aplicacion".exe.config que se encuentra generalmente en la carpeta bin del 
 proyecto.
 </param>
</member>
<member name="T:LibreriaCadenaProduccion.Controles.Botones.ctrlBotonBase">
 <summary>
 Esta es la clase base de los controles de tipo boton, de ella heredan todos los
 controles de este mismo tipo o de funcionalidad similar.
 Si el control heredado se crea dinámicamente (en ejecución), es necesario
 definir sus nuevos atributos en el constructor.
 </summary>
 <remarks></remarks>
 
</member>
<member name="T:LibreriaCadenaProduccion.Controles.Labels.ctrlLabelBase">
 <summary>
 Esta es la clase base de los controles de tipo label, de ella heredan todos los
 controles de este mismo tipo o de funcionalidad similar.
 Si el control heredado se crea dinámicamente (en ejecución), es necesario
 definir sus nuevos atributos en el constructor.
 </summary>
 <remarks></remarks>
</member>
<member name="F:LibreriaCadenaProduccion.panelImagen.var_modo">
 <summary>
 Existen diferentes modos en la imagen
 </summary>
 <remarks></remarks>
</member>
<member name="F:LibreriaCadenaProduccion.panelImagen.var_posicion_filtro">
 <summary>
 Esta variable sirve para controlar "posicion" del filtro cuando se está realizando,
 ya que cuando se aplica un filtro la imagen
 no puede volver al tamaño original, con lo que se ha de aplicar cada vez sobre
 la original, siempre se reinicia a 0 cuando cambiamos el modo 
 </summary>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.panelImagen.asignaImagen(System.Drawing.Image@)">
 <summary>
 Creamos una copia de las imagenes para su tratamiento digital
 </summary>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.panelImagen.imagen_libera">
 <summary>
 Este método libera la imagen que tengamos cargada en el control
 </summary>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Datos.GeneralMySQL.clsAccesoDatosMySQL.ponerCaracterEnBlancoMySQL(System.Object,System.String)">
 <summary> 
ponercaracterenblanco, comprueba si el parametro es DBnull caso que lo sea lo sustituye por "" o texto alternativo si se ha introducido  
</summary>
 <param name=" parametro ">parametro que comprobamos que no sea nulo</param>
 <param name=" textoAlternativo "> texto para sustituir si parametro es nulo por defecto ""</param> 
 <returns>cadena para visualizar </returns> 
</member>
<member name="M:LibreriaCadenaProduccion.Datos.GeneralMySQL.clsAccesoDatosMySQL.ejecutaMySQLEjecucion(System.String,System.String,System.Int32@,System.Boolean)">
 <summary>
 Este metodo ejecuta una instruccion SQL que no devuelve filas (INSERT, UPDATE, DELETE...)
 Realizado para casos de SQL complejos (INSERTS creados a partir de SELECTS de varias tablas)
 para el pobrecito de J.Medrano, que le gusta complicarse la vida.
 El procedimiento devuelve si lo ha ejecutado correctamente, y como parámetro
 opcional devuelve el numero de filas aceptadas
 </summary>
 <param name="sql"></param>
 <param name="cadenaConexion"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Datos.GeneralSQL.clsAccesoDatosSQL.ponerCaracterEnBlanco(System.Object,System.String)">
 <summary> 
ponercaracterenblanco, comprueba si el parametro es DBnull caso que lo sea lo sustituye por "" o texto alternativo si se ha introducido  
</summary>
 <param name=" parametro ">parametro que comprobamos que no sea nulo</param>
 <param name=" textoAlternativo "> texto para sustituir si parametro es nulo por defecto ""</param> 
 <returns>cadena para visualizar </returns> 
</member>
<member name="M:LibreriaCadenaProduccion.Datos.GeneralSQL.clsAccesoDatosSQL.ejecutaSQLEjecucion(System.String,System.String,System.Int32@,System.Boolean)">
 <summary>
 Este metodo ejecuta una instruccion SQL que no devuelve filas (INSERT, UPDATE, DELETE...)
 Realizado para casos de SQL complejos (INSERTS creados a partir de SELECTS de varias tablas)
 para el pobrecito de J.Medrano, que le gusta complicarse la vida.
 El procedimiento devuelve si lo ha ejecutado correctamente, y como parámetro
 opcional devuelve el numero de filas aceptadas
 </summary>
 <param name="sql"></param>
 <param name="cadenaConexion"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Datos.Produccion.cadenaproduccion.clsAccesoDatosDocumento.ActualizaCamposDocumento(System.String,System.String,System.Data.DataTable)">
 <summary>
 Actualiza los campos pasados en formato datatable (con dos columnas, campo y valor) del ID de documento seleccionado
 </summary>
 <param name="ID"></param>
 <param name="campos"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Datos.Produccion.cadenaproduccion.clsAccesoDatosDocumento.InsertarDocumento(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String)">
 <summary>
 inserción en correccionDIGI
 Reintentamos la insercion de un registro hasta que conseguimos insertarlo!
 o sobrepasa los 10 intentos
 </summary>
 <param name="cadenaConexion"></param>
 <param name="lote"></param>
 <param name="pagina"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:LibreriaCadenaProduccion.Datos.Produccion.cadenaproduccion.clsAccesoDatosDocumento.ActualizarIdentificadoresNumericos(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
 <summary>
 Modificacion en un punto o X de las paginas de registros
 OJO que tambien debemos de modificar la tabla de docs incidencias
 </summary>
 <param name="cadenaConexion"></param>
 <param name="proyecto"></param>
 <param name="lote"></param>
 <param name="pagina"></param>
 <param name="UltimaPagina"></param>
 <param name="icrementar"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Datos.Produccion.cadenaproduccion.clsAccesoDatosDocumento.MarcarIndidenciaDocumento(System.Int32,System.String,System.Data.DataTable,System.String,System.String,System.String)">
 <summary>
 Se cambia el estado al documento seleccionado actualmente (poner por si seleccionan varios)
 esta funcion actualiza en la tabla 
 </summary>
 <param name="tecla"></param>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Datos.Produccion.clsAccesoDatosProduccion.CargarListadoProyectos(System.String,System.String)">
 <summary> 
Carga el listado de los proyectos, carga el listado de los proyectos con sus correspondientes configuraciones
</summary>
 <param name=" codigoCliente ">indica el cliente para el que se obtienen los proyectos</param>
 <returns>Devuelve una datatable con todos los posibles proyectos </returns> 
</member>
<member name="M:LibreriaCadenaProduccion.Datos.Produccion.clsAccesoDatosProduccion.ObtenerContraseñaProyecto(System.String,System.String)">
 <summary> 
devueve la clave para un proyecto 
</summary>
 <param name="proyecto ">Proyecto para el que se quiere obtener la contraseña </param>
 <returns>contraseña para el codigoproyecto seleccionado </returns> 
 <remarks> 
mas comentarios 
 </remarks> 
</member>
<member name="M:LibreriaCadenaProduccion.Datos.Propietaria.GeneralOracle.ClsAccesoDatosPropOracle.consultaDatatable(System.String,System.String)">
 <summary>
 Nos devuelve la datatable resultante de una consulta, en el caso de no encontrar registro o dar errores
 nos devuelve nothing
 </summary>
 <param name="sql"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Datos.Propietaria.GeneralOracle.ClsAccesoDatosPropOracle.obtenerValor(System.String,System.String,System.String,System.String)">
 <summary>
 Funcion para obtener un solo valor de un select, si se rellena el where se aplica la condición
 </summary>
 <param name="cadenaConexion"></param>
 <param name="tabla"></param>
 <param name="campo"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:LibreriaCadenaProduccion.Entidades.clsFecha">
 <summary>
 Nombre: Control Fecha para indización
 Autor:  J.Medrano
 Descripcion:
     Devido a que el control fecha no se asemeja al de visual 6, para una mayor productividad
     se ha reecho.
 </summary>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Entidades.clsFecha.fnc_fecha_string(System.Boolean)">
 <summary>
 Muestra el valor de la fecha con el formato determinado que seleccionamos
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Entidades.clsFecha.fnc_zona_eliminar(System.Int32)">
 <summary>
 Eliminacion de los datos de una zona determinada
 </summary>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Entidades.clsFecha2.#ctor">
 <summary>
 Asignamos lod atos al elemento seleccionado
 </summary>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Entidades.ClsOperacionesDigitalizacion.documento_insercion(System.String,System.String,System.Windows.Forms.ProgressBar@,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Data.DataRow}@,System.Boolean,System.Boolean,System.String,System.String,System.String)">
 <summary>
 Funcion para la eliminacion de un documento
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Entidades.ClsOperacionesDigitalizacion.documento_eliminacion(System.String,System.String,System.Windows.Forms.ProgressBar@,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.Data.DataRow}@)">
 <summary>
 Funcion para la eliminacion de un documento
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Entidades.ClsOperacionesDigitalizacion.documento_sustitucion(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 Funcion para sustituir un documento 
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Entidades.ClsDocumento.generarCaratula(System.String,System.String,System.String,System.String)">
 <summary>
 Generacion dinámica de una carátula, en el caso de que algun dato no tenga valor, no se muestra
 si deseamos poner el campo en question deberemos rellenar un espacio en blanco
 
 ESTO SE PODRIA METER EN UNA CLASE PARA UN MEJOR TRATAMIENTO, CLSCARATULA
 </summary>
 <param name="cadenaConexion">Cadena de conexion, para realizar la consultas</param>
 <param name="hospital_codigo">Codigo identificador del hospital, tabla: hospitales</param>
 <param name="nombre_paciente">Codigo identificador del paciente en la tabla "fip"</param>
 <param name="nhc">Numero historial clinicp</param>
 <param name="episodio">Episodio para rellenar</param>
 <param name="proyecto">Proyecto, necesario para mostrar codigo de barras, tabla configuracion</param>
 <returns>Se devuelve un objeto IMAGE, con la carátula generada</returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Entidades.ClsLote.#ctor(System.String,System.String,System.String)">
 <summary>
 Constructor del objeto lote
 </summary>
 <param name="lote">nombre del lote, lote1 , lote2, lote3</param>
 <param name="codigoproyecto ">Identifica al proyecto al que pertenece el lote </param> 
 <param name="fechalote">es util para diferenciar los lotes dentro de un mism proyecto en años diferentes</param> 
 <remarks> 
se crea un lote con el codigo del proyecto 
 </remarks> 
</member>
<member name="M:LibreriaCadenaProduccion.Entidades.ClsLote.insercionDocumento(System.String,System.Int32,System.Int32,System.Int32@)">
 <summary>
 Este metodo inserta un documento en un lote expecificado
 </summary>
 <param name="proyecto"></param>
 <param name="lote"></param>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Entidades.ClsLote.eliminacionDocumento(System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 Eliminacion de un documento, unicamente mediante su Identificador
 </summary>
 <param name="proyecto"></param>
 <param name="lote"></param>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.Entidades.ClsLote.obtenerDocumentos(System.String,System.Int32,System.Int32,System.String,System.Boolean,System.String,System.String,System.String)">
 <summary>
 Obtencion de los documentos de un lote
 </summary>
 <param name="proyecto"></param>
 <param name="fecha"></param>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.clsCaratula.generarCaratula(System.String,System.Int32,System.String,System.String,System.String,System.String)">
 <summary>
 Generacion dinámica de una carátula, en el caso de que algun dato no tenga valor, no se muestra
 si deseamos poner el campo en question deberemos rellenar un espacio en blanco
 </summary>
 <param name="cadenaConexion">Cadena de conexion, para realizar la consultas</param>
 <param name="hospital_codigo">Codigo identificador del hospital, tabla: hospitales</param>
 <param name="nombre_paciente">Codigo identificador del paciente en la tabla "fip"</param>
 <param name="nhc">Numero historial clinicp</param>
 <param name="episodio">Episodio para rellenar</param>
 <param name="proyecto">Proyecto, necesario para mostrar codigo de barras, tabla configuracion</param>
 <returns>Se devuelve un objeto IMAGE, con la carátula generada</returns>
 <remarks></remarks>
</member>
<member name="T:LibreriaCadenaProduccion.estructuras.clsCursorRegistros">
 <summary>
 Esta clase se utiliza para el movimiento de registros por la zona roja,
 por defecto se le pasa por referencia la grid ¿? todavia por definir
 </summary>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.estructuras.clsCursorRegistros.reincio(System.Data.DataTable@,System.Int32)">
 <summary>
 Reinciamos las propiedades de la clase 
 </summary>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.estructuras.clsCursorRegistros.dispose">
 <summary>
 Destrucción del objeto
 </summary>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.estructuras.clsCursorRegistros.indice_busca(System.Data.DataRow@)">
 <summary>
 Devuelve a partir de un datarow el indice donde se encuentra el elemento 
 En el caso de no encontrarlo, devuelve -1
 </summary>
 <param name="registro">Datarow de registro que queremos buscar</param>
 <returns>Indice del elemento buscado, -1 si no se encuentra</returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.estructuras.clsCursorRegistros.indice_situa(System.Int32,System.Windows.Forms.DataGridView@)">
 <summary>
 Situamos en la posicion pasada por parámetro el indice de posicion, devolvemos
 false si no se encuentra en el rango
 </summary>
 <param name="posicion"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.estructuras.clsCursorRegistros.indice_mover(System.Int32,System.Windows.Forms.DataGridView@)">
 <summary>
 Movimiento del indice del registro de los registros con incidencias
 </summary>
 <param name="direccion"></param>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.estructuras.clsCursorRegistros.indice_campo(System.String)">
 <summary>
 Devuelve el valor (string) del campo del registro que esté seleccionado en la clase
 </summary>
 <param name="campo"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.estructuras.clsCursorRegistros.registro_buscaID(System.String)">
 <summary>
 Devuelve un conjunto a partir de un ID
 </summary>
 <param name="ID"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LibreriaCadenaProduccion.FuncionesGlobales.Carpetas.clsCarpetas.obtenerListaDeArchivosEnUnaCarpeta(System.String,System.String)">
 <summary>
 Este metodo devuelve un array de strings. El array esta compuesto por las rutas
 completas de los archivos que coinciden con el filtro en la ruta especificada y en 
 sus subcarpetas.
 </summary>
 <param name="ruta">
 La ruta de la carpeta que queremos analizar( se analizaran subdirectorios tambien )
 </param>            ''' 
 <param name="filtro">
 Filtro a aplicar en la busqueda, debe ser del tipo: *.mdb, *.doc, *.exe .... y buscara todos
 los archivos con esa estension. Tambien se puede buecar el nombre de un archivo (sin testear)
 de manera de "prueba.c" 
 </param>
</member>
</members>
</doc>
